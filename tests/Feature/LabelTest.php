<?php

namespace Tests\Feature;

use App\Models\Label;
use App\Models\User;
use Tests\TestCase;

class LabelTest extends TestCase
{
    public User $user;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = User::factory()->create();
    }
    /**
     * A basic feature test example.
     */
    public function testStore(): void
    {
        $response = $this
            ->actingAs($this->user)
            ->get('/labels');

        $response->assertOk();
        $response = $this
            ->actingAs($this->user)
            ->get('/labels/create');

        $response->assertOk();
        $name = 'новая ' . time();
        $response = $this->actingAs($this->user)
            ->post('/labels', [
                'name' => $name,
                'description' => 'описание новой метки',
            ]);
        $response->assertRedirect('/labels');
        $label = Label::orderByDesc('created_at')->first();
        if ($label !== null) {
            $this->assertSame($name, $label->name);
            $this->assertSame('описание новой метки', $label->description);
        }
    }

    public function testUpdate(): void
    {
        $this->actingAs($this->user)
            ->post('/labels', [
                'name' => 'новая2',
                'description' => 'Описание новаой метки 2',
            ]);
        $labelId = Label::all()->sortByDesc('id')->first()->id ?? null;
        $name = 'новая 3 ' . time();
        $newResponse = $this->actingAs($this->user)
            ->patch("/labels/{$labelId}", [
                'name' => $name,
                'description' => 'Описание новаой метки 3',
            ]);

        $newResponse->assertRedirect('/labels');
        $newLabel = Label::all()->sortByDesc('id')->first();
        if ($newLabel !== null) {
            $this->assertSame($name, $newLabel->name);
            $this->assertSame('Описание новаой метки 3', $newLabel->description);
        }
    }

    public function testEdit(): void
    {
        $name = 'новая 4 ' . time();
        $response = $this->actingAs($this->user)
            ->post('/labels', [
                'name' => $name,
                'description' => 'Описание новаой метки 4',
            ]);
        $response->assertRedirect('/labels');
        $labelId = Label::all()->sortByDesc('id')->first()->id ?? null;

        $newResponse = $this->actingAs($this->user)
            ->get("/labels/{$labelId}/edit");
        $newResponse->assertOk();

        $newLabel = Label::all()->sortByDesc('id')->first();
        if ($newLabel !== null) {
            $this->assertSame($name, $newLabel->name);
            $this->assertSame('Описание новаой метки 4', $newLabel->description);
        }
    }

    public function testDestroy(): void
    {
        $response = $this->actingAs($this->user)
            ->post('/labels', [
                'name' => 'новая5',
                'description' => 'Описание новаой метки 5',
            ]);
        $labelId = Label::all()->sortByDesc('id')->first()->id ?? null;

        $newResponse = $this->actingAs($this->user)
            ->delete("/labels/{$labelId}");
        $newResponse->assertRedirect('/labels');
        $this->assertNull(Label::find($labelId));
    }
}
